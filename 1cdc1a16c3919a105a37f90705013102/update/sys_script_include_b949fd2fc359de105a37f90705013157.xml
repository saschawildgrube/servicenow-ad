<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_ad.TestDrivenCodeGeneration</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Initiates the test-driven code generation loop based on the given record and performs the loop as often as it takes up to the maximum amount of iterations.</description>
        <name>TestDrivenCodeGeneration</name>
        <script><![CDATA[function TestDrivenCodeGeneration(grRecord, nMaxIterations)
{
	var IsValidRecord = x_snc_devtools.IsValidRecord;
	var GetIntegerValue = x_snc_devtools.GetIntegerValue;
	var StringFormat = x_snc_devtools.StringFormat;
	var RunTest = x_snc_devtools.RunTest;
	var GetTestRecord = x_snc_devtools.GetTestRecord;
	var GetValue = x_snc_devtools.GetValue;
			
	var progresstracker = new x_snc_devtools.ProgressTrackerAPI();
	progresstracker.Start();
	progresstracker.SetPercentageProgress(0);

	if (IsValidRecord(grRecord) == false)
	{
		progresstracker.SetResult(null,false,'Invalid Record specified');
		return false;

	}

	if (IsTestDrivenCodeGenerationAvailable(grRecord) == false)
	{
		progresstracker.SetResult(null,false,'Test-Driven Code Generation is not available for the record.');
		return false;
	}

	nMaxIteration = GetIntegerValue(nMaxIterations);
	if (nMaxIteration == 0)
	{
		nMaxIteration = 10;
	}
	if (nMaxIteration > 20)
	{
		nMaxIteration = 20;
	}


	// Identify Test
	var grTest = GetTestRecord(grRecord);
	if (IsValidRecord(grTest) == false)
	{
		return false;
	}


	var nIteration = 0;

	while (nIteration < nMaxIterations)
	{
		progresstracker.SetText(StringFormat('Iteration {0} of {1}.',nIteration,nMaxIterations));		

		x_snc_devtools.Sleep(1);

		// Run Test
		var grTestResult = RunTest(grTest);

		if (grTestResult == false)
		{
			progresstracker.SetResult(null,false,'Test Execution failed');
			return false;
		}

		var bTestSuccess = (grTestResult.status == 'success');

		if (bTestSuccess == true)
		{
			progresstracker.SetResult(null,true,'Test passed!');	
			return true;
		}

		// Did the test pass?
			// stop

		// Create prompt
			// Function descrption
			// Test implementation
			// Test result
			// current code
			// make it so!

		// Send prompt to LLM

		// Store the new code to the record

		var nPercentage = 100 * (nIteration + 1) / nMaxIterations;
		progresstracker.SetPercentageProgress(nPercentage);

		nIteration++;
	}




	progresstracker.SetPercentageProgress(100);

	progresstracker.SetResult(null,false,'Maximum iterations used, Test-Driven Code Generation was NOT successful.');

	return true;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-10-23 09:47:38</sys_created_on>
        <sys_id>b949fd2fc359de105a37f90705013157</sys_id>
        <sys_mod_count>16</sys_mod_count>
        <sys_name>TestDrivenCodeGeneration</sys_name>
        <sys_package display_value="ArtificialDeveloper WORK IN PROGRESS" source="x_snc_ad">1cdc1a16c3919a105a37f90705013102</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="ArtificialDeveloper WORK IN PROGRESS">1cdc1a16c3919a105a37f90705013102</sys_scope>
        <sys_update_name>sys_script_include_b949fd2fc359de105a37f90705013157</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-10-27 14:39:45</sys_updated_on>
    </sys_script_include>
</record_update>
